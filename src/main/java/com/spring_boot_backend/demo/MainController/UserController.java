package com.spring_boot_backend.demo.MainController;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RestController;

import com.spring_boot_backend.demo.Model.UserModel;

@RestController
public class UserController {

    @GetMapping("/User/{userid}")
    public UserModel getUserById(@PathVariable("userid") Integer id) {
        UserModel user1 = new UserModel(1, "code", "trueashraf27@gmail.com", "Ashrafashraf");
        user1.setId(id);
        return user1;
    }

    @PostMapping("/users")
    public UserModel createUser(@RequestBody UserModel user) {
        UserModel newUser = new UserModel();
        newUser.setEmail(user.getEmail());
        newUser.setName(user.getName());
        newUser.setPassword(user.getPassword());
        // Usually, the ID is autogenerated, so you may not need to set it here.
        return newUser;
    }

    @PutMapping("/users")
    public UserModel updateUser(@RequestBody UserModel user) {
        UserModel user1 = new UserModel(1, "code", "trueashraf27@gmail.com", "Ashrafashraf");

        if (user.getName() != null) {
            user1.setName(user.getName());
        }
        if (user.getEmail() != null) {
            user1.setEmail(user.getEmail());
        }
        if (user.getPassword() != null) {
            user1.setPassword(user.getPassword());
        }
        return user1;
    }

    @DeleteMapping("/User/{userid}")
    public String deleteUser(@PathVariable("userid") Integer id) {
        // Your deletion logic goes here
        return "Deleted successfully";
    }
}
